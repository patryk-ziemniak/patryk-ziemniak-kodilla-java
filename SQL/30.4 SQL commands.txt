CREATE TABLE BOOKS_AUD (
                           EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                           EVENT_DATE DATETIME NOT NULL,
                           EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                           BOOK_ID INT NOT NULL,
                           OLD_BOOK_TITLE VARCHAR(255),
                           NEW_BOOK_TITLE VARCHAR(255),
                           OLD_BOOK_PUBYEAR INT,
                           NEW_BOOK_PUBYEAR INT,
                           OLD_BOOK_BESTSELLER tinyint(1),
                           NEW_BOOK_BESTSELLER tinyint(1),
                           PRIMARY KEY (EVENT_ID)
);


DELIMITER $$

CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON books
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_BOOK_TITLE, NEW_BOOK_PUBYEAR,
                           NEW_BOOK_BESTSELLER)
        VALUE(CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON books
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_BOOK_TITLE, OLD_BOOK_PUBYEAR, OLD_BOOK_BESTSELLER)
        VALUE(CURTIME(), 'DELETE', OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON books
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_BOOK_TITLE, NEW_BOOK_TITLE,
                           OLD_BOOK_PUBYEAR, NEW_BOOK_PUBYEAR, OLD_BOOK_BESTSELLER, NEW_BOOK_BESTSELLER)
        VALUE(CURTIME(), 'UPDATE', OLD.BOOK_ID, OLD.TITLE, NEW.TITLE,
              OLD.PUBYEAR, NEW.PUBYEAR, OLD.BESTSELLER, NEW.BESTSELLER);
END $$

DELIMITER ;


CREATE TABLE READERS_AUD (
                             EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
                             EVENT_DATE DATETIME NOT NULL,
                             EVENT_TYPE VARCHAR(10) DEFAULT NULL,
                             READER_ID INT NOT NULL,
                             OLD_READER_FIRSTNAME varchar(255),
                             NEW_READER_FIRSTNAME varchar(255),
                             OLD_READER_LASTNAME varchar(255),
                             NEW_READER_LASTNAME varchar(255),
                             OLD_READER_PESELID varchar(11),
                             NEW_READER_PESELID varchar(11),
                             OLD_READER_VIP_LEVEL varchar(20),
                             NEW_READER_VIP_LEVEL varchar(20),
                             PRIMARY KEY (EVENT_ID)
);


DELIMITER $$

CREATE TRIGGER READERS_INSERT AFTER INSERT ON readers
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_READER_FIRSTNAME, NEW_READER_LASTNAME,
                             NEW_READER_PESELID, NEW_READER_VIP_LEVEL)
        VALUE(CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER READERS_DELETE AFTER DELETE ON readers
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_READER_FIRSTNAME, OLD_READER_LASTNAME, OLD_READER_PESELID,
                             OLD_READER_VIP_LEVEL)
        VALUE(CURTIME(), 'DELETE', OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
END $$

DELIMITER ;


DELIMITER $$

CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON readers
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_READER_FIRSTNAME, NEW_READER_FIRSTNAME,
                             OLD_READER_LASTNAME, NEW_READER_LASTNAME, OLD_READER_PESELID, NEW_READER_PESELID,
                             OLD_READER_VIP_LEVEL, NEW_READER_VIP_LEVEL)
        VALUE(CURTIME(), 'UPDATE', OLD.READER_ID, OLD.FIRSTNAME, NEW.FIRSTNAME, OLD.LASTNAME, NEW.LASTNAME,
              OLD.PESELID, NEW.PESELID, OLD.VIP_LEVEL, NEW.VIP_LEVEL);
END $$

DELIMITER ;